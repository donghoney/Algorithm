n,m = map(int, input().split())
paper = [list(map(int,input().split())) for _ in range(n)]
tetromino = [
    [(0,0),(0,1),(0,2),(0,3)], # ㅡ
    [(0,0),(1,0),(2,0),(3,0)], # I
    [(0,0),(0,1),(1,0),(1,1)], # ㅁ
    [(0,0),(1,0),(2,0),(2,1)], # L1
    [(2,0),(2,1),(1,1),(0,1)], # L2
    [(0,0),(1,0),(2,0),(0,1)], # L3
    [(0,0),(0,1),(1,1),(2,1)], # L4
    [(0,0),(1,0),(1,1),(1,2)], # ㄱ1
    [(0,2),(1,0),(1,1),(1,2)], # ㄱ2
    [(0,0),(0,1),(0,2),(1,0)], # ㄱ3
    [(0,0),(0,1),(0,2),(1,2)], # ㄱ4
    [(0,0),(1,0),(1,1),(2,1)], # 번개1
    [(0,1),(1,1),(1,0),(2,0)], # 번개2
    [(0,0),(0,1),(1,1),(1,2)], # 번개3
    [(1,0),(1,1),(0,1),(0,2)], # 번개4
    [(0,1),(1,0),(1,1),(1,2)], # ㅗ1
    [(0,0),(0,1),(0,2),(1,1)], # ㅗ2
    [(0,0),(1,0),(2,0),(1,1)], # ㅗ3
    [(1,0),(0,1),(1,1),(2,1)]  # ㅗ4
]

def find(x,y):
    global ans
    for i in range(19):
        result=0
        for j in range(4):
            try:
                next_x = x + tetromino[i][j][0]
                next_y = y + tetromino[i][j][1]
                result += paper[next_x][next_y]
            except IndexError:
                continue
        ans = max(ans, result)

def solve():
    for i in range(n):
        for j in range(m):
            find(i,j)

ans = 0
solve()
print(ans)